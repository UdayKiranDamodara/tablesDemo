{"version":3,"sources":["App.js","index.js"],"names":["App","useState","data","setData","sortOrder","setSortOrder","useEffect","fethcData","a","fetch","rawData","json","console","log","sort","sortField","temp","item1","item2","name","toLowerCase","username","address","city","company","JSON","parse","stringify","style","width","marginLeft","marginRight","marginTop","onClick","map","item","index","textAlign","ReactDOM","render","document","getElementById"],"mappings":"mNAsGeA,EAnGH,WACR,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,mBAAS,QAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACNC,MACD,IAEH,IAAMA,EAAS,uCAAG,8BAAAC,EAAA,sEACQC,MAAM,8CADd,cACRC,EADQ,gBAEKA,EAAQC,OAFb,OAERT,EAFQ,OAGdU,QAAQC,IAAIX,GACZC,EAAQD,GAJM,2CAAH,qDAOTY,EAAO,SAACC,GACVH,QAAQC,IAAI,WACZ,IAAMG,EAAOd,EAEb,OAAOa,GACH,IAAK,OAEkB,YAAZX,GACCY,EAAKF,MAAK,SAACG,EAAOC,GAAR,OAAiBD,EAAME,KAAKC,cAAcF,EAAMC,KAAKC,cAAe,GAAG,KACjFf,EAAa,cAEbW,EAAKF,MAAK,SAACG,EAAOC,GAAR,OAAiBD,EAAME,KAAKC,cAAcF,EAAMC,KAAKC,eAAgB,EAAE,KACjFf,EAAa,YAEjB,MAER,IAAK,WAEkB,gBAAZD,GACCY,EAAKF,MAAK,SAACG,EAAOC,GAAR,OAAiBD,EAAMI,SAASD,cAAcF,EAAMG,SAASD,cAAe,GAAG,KACzFf,EAAa,kBAEbW,EAAKF,MAAK,SAACG,EAAOC,GAAR,OAAiBD,EAAMI,SAASD,cAAcF,EAAMG,SAASD,eAAgB,EAAE,KACzFf,EAAa,gBAEjB,MAER,IAAK,OAEkB,YAAZD,GACCY,EAAKF,MAAK,SAACG,EAAOC,GAAR,OAAiBD,EAAMK,QAAQC,KAAKH,cAAcF,EAAMI,QAAQC,KAAKH,cAAe,GAAG,KACjGf,EAAa,cAEbW,EAAKF,MAAK,SAACG,EAAOC,GAAR,OAAiBD,EAAMK,QAAQC,KAAKH,cAAcF,EAAMI,QAAQC,KAAKH,eAAgB,EAAE,KACjGf,EAAa,YAEjB,MAER,IAAK,UAEkB,eAAZD,GACCY,EAAKF,MAAK,SAACG,EAAOC,GAAR,OAAiBD,EAAMO,QAAQL,KAAKC,cAAcF,EAAMM,QAAQL,KAAKC,cAAe,GAAG,KACjGf,EAAa,iBAEbW,EAAKF,MAAK,SAACG,EAAOC,GAAR,OAAiBD,EAAMO,QAAQL,KAAKC,cAAcF,EAAMM,QAAQL,KAAKC,eAAgB,EAAE,KACjGf,EAAa,eAM7BF,EAAQsB,KAAKC,MAAMD,KAAKE,UAAUX,KAClCJ,QAAQC,IAAI,gBAAiBG,IAGjC,OACI,gCACI,wBAAOY,MAAO,CAACC,MAAO,MAAOC,WAAY,OAAQC,YAAa,OAAQC,UAAW,QAAjF,UACI,gCACI,+BACI,oBAAIC,QAAS,kBAAInB,EAAK,SAAtB,kBACA,oBAAImB,QAAS,kBAAInB,EAAK,aAAtB,sBACA,oBAAImB,QAAS,kBAAInB,EAAK,SAAtB,kBACA,oBAAImB,QAAS,kBAAInB,EAAK,YAAtB,0BAGR,gCACKZ,EAAKgC,KAAI,SAACC,EAAMC,GACb,OACI,+BACI,oBAAIR,MAAO,CAACS,UAAW,UAAvB,SAAmCF,EAAKhB,OACxC,oBAAIS,MAAO,CAACS,UAAW,UAAvB,SAAmCF,EAAKd,WACxC,oBAAIO,MAAO,CAACS,UAAW,UAAvB,SAAmCF,EAAKb,QAAQC,OAChD,oBAAIK,MAAO,CAACS,UAAW,UAAvB,SAAmCF,EAAKX,QAAQL,SAJ3CiB,WAUzB,0EC7FZE,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8fa01c74.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    const [data, setData] = useState([]);\r\n    const [sortOrder, setSortOrder] = useState('none');\r\n\r\n    useEffect(()=>{\r\n        fethcData();\r\n    }, [])\r\n\r\n    const fethcData = async () => {\r\n        const rawData = await fetch('https://jsonplaceholder.typicode.com/users');\r\n        const data = await rawData.json();\r\n        console.log(data);\r\n        setData(data);\r\n    }\r\n\r\n    const sort = (sortField) => {\r\n        console.log('in sort');\r\n        const temp = data;\r\n\r\n        switch(sortField) {\r\n            case 'name': \r\n                {\r\n                    if(sortOrder==='nameAsc'){\r\n                        temp.sort((item1, item2)=>(item1.name.toLowerCase()<item2.name.toLowerCase())?1:-1);\r\n                        setSortOrder('nameDesc');\r\n                    }else{\r\n                        temp.sort((item1, item2)=>(item1.name.toLowerCase()<item2.name.toLowerCase())?-1:1);\r\n                        setSortOrder('nameAsc');\r\n                    }\r\n                    break;\r\n                }\r\n            case 'username': \r\n                {\r\n                    if(sortOrder==='usernameAsc'){\r\n                        temp.sort((item1, item2)=>(item1.username.toLowerCase()<item2.username.toLowerCase())?1:-1);\r\n                        setSortOrder('usernameDesc');\r\n                    }else{\r\n                        temp.sort((item1, item2)=>(item1.username.toLowerCase()<item2.username.toLowerCase())?-1:1);\r\n                        setSortOrder('usernameAsc');\r\n                    }\r\n                    break;\r\n                }\r\n            case 'city': \r\n                {\r\n                    if(sortOrder==='cityAsc'){\r\n                        temp.sort((item1, item2)=>(item1.address.city.toLowerCase()<item2.address.city.toLowerCase())?1:-1);\r\n                        setSortOrder('cityDesc');\r\n                    }else{\r\n                        temp.sort((item1, item2)=>(item1.address.city.toLowerCase()<item2.address.city.toLowerCase())?-1:1);\r\n                        setSortOrder('cityAsc');\r\n                    }\r\n                    break;\r\n                }\r\n            case 'company': \r\n                {\r\n                    if(sortOrder==='companyAsc'){\r\n                        temp.sort((item1, item2)=>(item1.company.name.toLowerCase()<item2.company.name.toLowerCase())?1:-1);\r\n                        setSortOrder('companyDesc');\r\n                    }else{\r\n                        temp.sort((item1, item2)=>(item1.company.name.toLowerCase()<item2.company.name.toLowerCase())?-1:1);\r\n                        setSortOrder('companyAsc');\r\n                    }\r\n                    break;\r\n                }\r\n        }\r\n        // temp.sort((item1, item2)=>(item1.name.toLowerCase()<item2.name.toLowerCase())?-1:1);\r\n        setData(JSON.parse(JSON.stringify(temp)));\r\n        console.log('sorted array:', temp)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <table style={{width: '80%', marginLeft: 'auto', marginRight: 'auto', marginTop: '50px'}} >\r\n                <thead>\r\n                    <tr>\r\n                        <th onClick={()=>sort('name')}>Name</th>\r\n                        <th onClick={()=>sort('username')} >UserName</th>\r\n                        <th onClick={()=>sort('city')} >City</th>\r\n                        <th onClick={()=>sort('company')} >Company</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map((item, index)=>{\r\n                        return(\r\n                            <tr key={index}>\r\n                                <td style={{textAlign: 'center'}}>{item.name}</td>\r\n                                <td style={{textAlign: 'center'}}>{item.username}</td>\r\n                                <td style={{textAlign: 'center'}}>{item.address.city}</td>\r\n                                <td style={{textAlign: 'center'}}>{item.company.name}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <h4>Click on a column heading to sort!!!</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}